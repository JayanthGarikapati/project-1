{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNJMgfP+ZVTjwWo5dsDN3pS"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"17196834915940989cdc6ef3fb9d9962":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_75f1d98ecc5e465bb8047bacb8497ba8","IPY_MODEL_6c4c474fdbf242ecae4100fe0d0f5325","IPY_MODEL_36ccd3382c9843a89625bbad6dc04892"],"layout":"IPY_MODEL_34530be0bdb94b33a5d1ba22dcfc6994"}},"75f1d98ecc5e465bb8047bacb8497ba8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_cdf770248e854e44a859e4a3f95adbf7","placeholder":"​","style":"IPY_MODEL_da1c986b9a6b4a7198384333bd577efc","value":"Training Epoch 0 : 100%"}},"6c4c474fdbf242ecae4100fe0d0f5325":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_098cb0c868c34ba6b09684e704746c03","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c81bf9b8cdf9498aab48a27a25fa22c5","value":1}},"36ccd3382c9843a89625bbad6dc04892":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_229fd111812e49fd81901fdf2d6d4b3e","placeholder":"​","style":"IPY_MODEL_5c646ba1bc174c80af6ab1ad7236bec0","value":" 1/1 [01:46&lt;00:00, 106.59s/it, disc_loss=0.496, gen_loss=1.31]"}},"34530be0bdb94b33a5d1ba22dcfc6994":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cdf770248e854e44a859e4a3f95adbf7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"da1c986b9a6b4a7198384333bd577efc":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"098cb0c868c34ba6b09684e704746c03":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c81bf9b8cdf9498aab48a27a25fa22c5":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"229fd111812e49fd81901fdf2d6d4b3e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5c646ba1bc174c80af6ab1ad7236bec0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ccaf22945f3543be85f6331558f758e5":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c9bb7fe77089424daea4f35a32f2668c","IPY_MODEL_85939a4840db4f539cec4841098ed1fb","IPY_MODEL_838b0cf09b564d4d979104ad4157e0a6"],"layout":"IPY_MODEL_db5bf14e8eda46d1aaf86568ff77f6a9"}},"c9bb7fe77089424daea4f35a32f2668c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_659a40546d044fc79bb4441f11f06a97","placeholder":"​","style":"IPY_MODEL_94d2b40416e1444bb56344a102ccd2b8","value":"Testing Epoch 0 : 100%"}},"85939a4840db4f539cec4841098ed1fb":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b247daecae13413681e9b53ebe606822","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1a167ccdbd3142ddb6ec7f07711344c6","value":1}},"838b0cf09b564d4d979104ad4157e0a6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7dd3466253604edbb67ff359ce1bb852","placeholder":"​","style":"IPY_MODEL_f5b5795ff10a4052ba54e01f95385fd9","value":" 1/1 [00:53&lt;00:00, 52.34s/it, disc_loss=0.48, gen_loss=1.04]"}},"db5bf14e8eda46d1aaf86568ff77f6a9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"659a40546d044fc79bb4441f11f06a97":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"94d2b40416e1444bb56344a102ccd2b8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b247daecae13413681e9b53ebe606822":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1a167ccdbd3142ddb6ec7f07711344c6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7dd3466253604edbb67ff359ce1bb852":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f5b5795ff10a4052ba54e01f95385fd9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0190a7907643420aa6ba53241c7940eb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8fa7590580c842fabd9bc24754ce17e4","IPY_MODEL_3ce6906056904e0eaa329c890c0ea7ce","IPY_MODEL_6e470211767040ba850d3c3d439238cd"],"layout":"IPY_MODEL_cbcc3b3cb4e94bf6a735e09b09304c84"}},"8fa7590580c842fabd9bc24754ce17e4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_edc4511b908a4eb8a55ee5cea285a71d","placeholder":"​","style":"IPY_MODEL_d400903b567a413f955c49c6f7d876c9","value":"Training Epoch 1 :   0%"}},"3ce6906056904e0eaa329c890c0ea7ce":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_ef16ca277ab24960ae7bbf428419afb1","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_cc3c7059bfe646e0a3298b736d4f07c6","value":0}},"6e470211767040ba850d3c3d439238cd":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a92dd3b2f7074eeb987f6ce285a29b15","placeholder":"​","style":"IPY_MODEL_e005105838964019a3bd0ccd6e69c8bd","value":" 0/1 [00:00&lt;?, ?it/s]"}},"cbcc3b3cb4e94bf6a735e09b09304c84":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"edc4511b908a4eb8a55ee5cea285a71d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d400903b567a413f955c49c6f7d876c9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ef16ca277ab24960ae7bbf428419afb1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cc3c7059bfe646e0a3298b736d4f07c6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a92dd3b2f7074eeb987f6ce285a29b15":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e005105838964019a3bd0ccd6e69c8bd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9W2HbWw2M62W","executionInfo":{"status":"ok","timestamp":1697254197668,"user_tz":-330,"elapsed":27958,"user":{"displayName":"GARI KAPATI MUNI JAYANTH G","userId":"17943767192181774217"}},"outputId":"53d83fc9-b8b2-4b14-d05b-1e3781d1916a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","source":["import cv2\n","import numpy as np\n","import pandas as pd\n","import os, math, sys\n","import glob, itertools\n","import argparse, random\n","\n","import torch\n","import torch.nn as nn\n","\n","import torch.nn.functional as F\n","from torch.autograd import Variable\n","from torchvision.models import vgg19\n","import torchvision.transforms as transforms\n","from torch.utils.data import DataLoader, Dataset\n","from torchvision.utils import save_image, make_grid\n","\n","import plotly\n","import plotly.express as px\n","import plotly.graph_objects as go\n","import matplotlib.pyplot as plt\n","\n","from PIL import Image\n","from tqdm import tqdm_notebook as tqdm\n","from sklearn.model_selection import train_test_split\n","\n","random.seed(42)\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"LkVagsUeNb8U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["torch.cuda.empty_cache()\n","import gc\n","gc.collect()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uiVon2ZLPFXq","executionInfo":{"status":"ok","timestamp":1697259916502,"user_tz":-330,"elapsed":619,"user":{"displayName":"GARI KAPATI MUNI JAYANTH G","userId":"17943767192181774217"}},"outputId":"f13f3a4e-c4ff-4e8d-8aa4-2a08266aed5e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# load pretrained models\n","load_pretrained_models = True\n","# number of epochs of training\n","n_epochs = 5\n","# name of the dataset\n","dataPathCanonTrain = '/content/gdrive/MyDrive/images'\n","dataPathCanonTest = '/content/gdrive/MyDrive/images'\n","dataPathNikonTrain = '/content/gdrive/MyDrive/images'\n","dataPathNikonTest = '/content/gdrive/MyDrive/images*'\n","# size of the batches\n","batch_size = 16\n","# adam: learning rate\n","lr = 0.00008\n","# adam: decay of first order momentum of gradient\n","b1 = 0.5\n","# adam: decay of second order momentum of gradient\n","b2 = 0.999\n","# epoch from which to start lr decay\n","decay_epoch = 100\n","# number of cpu threads to use during batch generation\n","n_cpu = 8\n","# high res. image height\n","hr_height = 256\n","# high res. image width\n","hr_width = 256\n","# number of image channels\n","channels = 3\n","\n","os.makedirs(\"images\", exist_ok=True)\n","os.makedirs(\"saved_models\", exist_ok=True)\n","\n","cuda = torch.cuda.is_available()\n","hr_shape = (hr_height, hr_width)"],"metadata":{"id":"yLB8x_2oPMH_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["trainCanonDataHR = []\n","trainCanonDataLR = []\n","i = 0\n","for image in glob.iglob(f'{dataPathCanonTrain}/*'):\n","    if image.split('_')[-1] == 'HR.png':\n","        trainCanonDataHR.append(image)\n","    else:\n","        trainCanonDataLR.append(image)\n","\n","testCanonDataHR = []\n","testCanonDataLR = []\n","i = 0\n","for image in glob.iglob(f'{dataPathCanonTest}/*'):\n","    if image.split('_')[-1] == 'HR.png':\n","        testCanonDataHR.append(image)\n","    else:\n","        testCanonDataLR.append(image)\n","trainNikonDataHR = []\n","trainNikonDataLR = []\n","i = 0\n","for image in glob.iglob(f'{dataPathNikonTrain}/*'):\n","    if image.split('_')[-1] == 'HR.png':\n","        trainNikonDataHR.append(image)\n","    else:\n","        trainNikonDataLR.append(image)\n","\n","testNikonDataHR = []\n","testNikonDataLR = []\n","i = 0\n","for image in glob.iglob(f'{dataPathNikonTest}/*'):\n","    if image.split('_')[-1] == 'HR.png':\n","        testNikonDataHR.append(image)\n","    else:\n","        testNikonDataLR.append(image)\n","trainDataHR = trainCanonDataHR + trainNikonDataHR\n","trainDataLR = trainCanonDataLR + trainNikonDataLR\n","\n","# Merging Canon and Nikon test\n","\n","testDataHR = testCanonDataHR + testNikonDataHR\n","testDataLR = testCanonDataLR + testNikonDataLR\n","print(len(trainCanonDataLR))\n","print(len(testCanonDataLR))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"abgFksGMlXaF","executionInfo":{"status":"ok","timestamp":1697260107299,"user_tz":-330,"elapsed":449,"user":{"displayName":"GARI KAPATI MUNI JAYANTH G","userId":"17943767192181774217"}},"outputId":"27d713c3-dc1f-4739-ea82-9a5822a8b80c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["13\n","13\n"]}]},{"cell_type":"code","source":["# Normalization parameters for pre-trained PyTorch models\n","mean = np.array([0.485, 0.456, 0.406])\n","std = np.array([0.229, 0.224, 0.225])\n","\n","class ImageDataset(Dataset):\n","    def __init__(self, files, hr_shape):\n","        hr_height, hr_width = hr_shape\n","        # Transforms for low resolution images and high resolution images\n","        self.lr_transform = transforms.Compose(\n","            [\n","                transforms.Resize((hr_height // 4, hr_height // 4), Image.BICUBIC),\n","                transforms.ToTensor(),\n","                transforms.Normalize(mean, std),\n","            ]\n","        )\n","        self.hr_transform = transforms.Compose(\n","            [\n","                transforms.Resize((hr_height, hr_height), Image.BICUBIC),\n","                transforms.ToTensor(),\n","                transforms.Normalize(mean, std),\n","            ]\n","        )\n","        self.files = files\n","        print(len(files))\n","\n","    def __getitem__(self, index):\n","        img = Image.open(self.files[index % len(self.files)])\n","\n","        img_lr = self.lr_transform(img)\n","        img_hr = self.hr_transform(img)\n","\n","        return {\"lr\": img_lr, \"hr\": img_hr}\n","\n","    def __len__(self):\n","        return len(self.files)"],"metadata":{"id":"6L6kcXm8P2Od"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# train_paths, test_paths = train_test_split(sorted(glob.glob(dataset_path + \"/*.*\")), test_size=0.02, random_state=42)\n","train_dataloader = DataLoader(ImageDataset(trainCanonDataLR, hr_shape=hr_shape), batch_size= batch_size, shuffle=True, num_workers=n_cpu)\n","test_dataloader = DataLoader(ImageDataset(testCanonDataLR, hr_shape=hr_shape), batch_size= batch_size, shuffle=True, num_workers=n_cpu)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w2dDlvDYRIHm","executionInfo":{"status":"ok","timestamp":1697260115811,"user_tz":-330,"elapsed":430,"user":{"displayName":"GARI KAPATI MUNI JAYANTH G","userId":"17943767192181774217"}},"outputId":"0bad9b38-e9d8-445d-d501-74130cc11efd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["13\n","13\n"]}]},{"cell_type":"code","source":["for img in testCanonDataLR[:5]:\n","    imgCV = cv2.imread(img)\n","    print(imgCV.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZRzgHzvzUUXJ","executionInfo":{"status":"ok","timestamp":1697260121194,"user_tz":-330,"elapsed":405,"user":{"displayName":"GARI KAPATI MUNI JAYANTH G","userId":"17943767192181774217"}},"outputId":"f9f3489d-2bbc-4fd5-ea1a-bfb020e61d36"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(218, 178, 3)\n","(218, 178, 3)\n","(218, 178, 3)\n","(218, 178, 3)\n","(218, 178, 3)\n"]}]},{"cell_type":"code","source":["class FeatureExtractor(nn.Module):\n","    def __init__(self):\n","        super(FeatureExtractor, self).__init__()\n","        vgg19_model = vgg19(pretrained=True)\n","        self.feature_extractor = nn.Sequential(*list(vgg19_model.features.children())[:18])\n","\n","    def forward(self, img):\n","        return self.feature_extractor(img)\n","\n","\n","class ResidualBlock(nn.Module):\n","    def __init__(self, in_features):\n","        super(ResidualBlock, self).__init__()\n","        self.conv_block = nn.Sequential(\n","            nn.Conv2d(in_features, in_features, kernel_size=3, stride=1, padding=1),\n","            nn.BatchNorm2d(in_features, 0.8),\n","            nn.PReLU(),\n","            nn.Conv2d(in_features, in_features, kernel_size=3, stride=1, padding=1),\n","            nn.BatchNorm2d(in_features, 0.8),\n","        )\n","\n","    def forward(self, x):\n","        return x + self.conv_block(x)\n","\n","\n","class GeneratorResNet(nn.Module):\n","    def __init__(self, in_channels=3, out_channels=3, n_residual_blocks=16):\n","        super(GeneratorResNet, self).__init__()\n","\n","        # First layer\n","        self.conv1 = nn.Sequential(nn.Conv2d(in_channels, 64, kernel_size=9, stride=1, padding=4), nn.PReLU())\n","\n","        # Residual blocks\n","        res_blocks = []\n","        for _ in range(n_residual_blocks):\n","            res_blocks.append(ResidualBlock(64))\n","        self.res_blocks = nn.Sequential(*res_blocks)\n","\n","        # Second conv layer post residual blocks\n","        self.conv2 = nn.Sequential(nn.Conv2d(64, 64, kernel_size=3, stride=1, padding=1), nn.BatchNorm2d(64, 0.8))\n","\n","        # Upsampling layers\n","        upsampling = []\n","        for out_features in range(2):\n","            upsampling += [\n","                # nn.Upsample(scale_factor=2),\n","                nn.Conv2d(64, 256, 3, 1, 1),\n","                nn.BatchNorm2d(256),\n","                nn.PixelShuffle(upscale_factor=2),\n","                nn.PReLU(),\n","            ]\n","        self.upsampling = nn.Sequential(*upsampling)\n","\n","        # Final output layer\n","        self.conv3 = nn.Sequential(nn.Conv2d(64, out_channels, kernel_size=9, stride=1, padding=4), nn.Tanh())\n","\n","    def forward(self, x):\n","        out1 = self.conv1(x)\n","        out = self.res_blocks(out1)\n","        out2 = self.conv2(out)\n","        out = torch.add(out1, out2)\n","        out = self.upsampling(out)\n","        out = self.conv3(out)\n","        return out\n","\n","\n","class Discriminator(nn.Module):\n","    def __init__(self, input_shape):\n","        super(Discriminator, self).__init__()\n","\n","        self.input_shape = input_shape\n","        in_channels, in_height, in_width = self.input_shape\n","        patch_h, patch_w = int(in_height / 2 ** 4), int(in_width / 2 ** 4)\n","        self.output_shape = (1, patch_h, patch_w)\n","\n","        def discriminator_block(in_filters, out_filters, first_block=False):\n","            layers = []\n","            layers.append(nn.Conv2d(in_filters, out_filters, kernel_size=3, stride=1, padding=1))\n","            if not first_block:\n","                layers.append(nn.BatchNorm2d(out_filters))\n","            layers.append(nn.LeakyReLU(0.2, inplace=True))\n","            layers.append(nn.Conv2d(out_filters, out_filters, kernel_size=3, stride=2, padding=1))\n","            layers.append(nn.BatchNorm2d(out_filters))\n","            layers.append(nn.LeakyReLU(0.2, inplace=True))\n","            return layers\n","\n","        layers = []\n","        in_filters = in_channels\n","        for i, out_filters in enumerate([64, 128, 256, 512]):\n","            layers.extend(discriminator_block(in_filters, out_filters, first_block=(i == 0)))\n","            in_filters = out_filters\n","\n","        layers.append(nn.Conv2d(out_filters, 1, kernel_size=3, stride=1, padding=1))\n","\n","        self.model = nn.Sequential(*layers)\n","\n","    def forward(self, img):\n","        return self.model(img)"],"metadata":{"id":"OJ_9sAKMUYvO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Initialize generator and discriminator\n","generator = GeneratorResNet()\n","discriminator = Discriminator(input_shape=(channels, *hr_shape))\n","feature_extractor = FeatureExtractor()\n","\n","# Set feature extractor to inference mode\n","feature_extractor.eval()\n","\n","# Losses\n","criterion_GAN = torch.nn.MSELoss()\n","criterion_content = torch.nn.L1Loss()\n","\n","if cuda:\n","    generator = generator.cuda()\n","    discriminator = discriminator.cuda()\n","    feature_extractor = feature_extractor.cuda()\n","    criterion_GAN = criterion_GAN.cuda()\n","    criterion_content = criterion_content.cuda()\n","\n","\n","\n","# Optimizers\n","\n","optimizer_G = torch.optim.Adam(generator.parameters(), lr=lr, betas=(b1, b2))\n","optimizer_D = torch.optim.Adam(discriminator.parameters(), lr=lr, betas=(b1, b2))\n","\n","Tensor = torch.cuda.FloatTensor if cuda else torch.Tensor"],"metadata":{"id":"LHE4Z-99UgCy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def plot_train_result(real_image, gen_image, recon_image, epoch=1, save=False,  show=True, fig_size=(15, 15)):\n","    fig, axes = plt.subplots(1, 3, figsize=fig_size)\n","    imgs = [to_np(real_image), to_np(gen_image), to_np(recon_image),\n","            to_np(real_image), to_np(gen_image), to_np(recon_image)]\n","    for ax, img in zip(axes.flatten(), imgs):\n","        ax.axis('off')\n","        #ax.set_adjustable('box-forced')\n","        # Scale to 0-255\n","        img = img.squeeze()\n","        print(img.shape)\n","#         img = img.reshape(3, 256, 256)\n","        img = (((img - img.min()) * 255) / (img.max() - img.min())).transpose(1, 2, 0).astype(np.uint8)\n","        ax.imshow(img, cmap=None, aspect='equal')\n","    plt.subplots_adjust(wspace=0, hspace=0)\n","\n","    title = 'Epoch {0}'.format(epoch + 1)\n","    fig.text(0.5, 0.04, title, ha='center')\n","\n","    # save figure\n","    if save:\n","        save_fn = 'Result_epoch_{:d}'.format(epoch+1) + '.png'\n","        plt.savefig(save_fn)\n","\n","    if show:\n","        plt.show()\n","    else:\n","        plt.close()\n","def to_np(x):\n","    return x.data.cpu().numpy()\n","def calculate_psnr(original, enhanced):\n","    # Ensure the images have the same data type\n","    original = original.astype(np.float64)\n","    enhanced = enhanced.astype(np.float64)\n","\n","    # Calculate the mean squared error (MSE)\n","    mse = np.mean((original - enhanced) ** 2)\n","\n","    # Calculate the maximum possible pixel value\n","    max_pixel_value = np.max(original)\n","\n","    # Calculate the PSNR using the formula: PSNR = 20 * log10(MAX) - 10 * log10(MSE)\n","    psnr = 20 * np.log10(max_pixel_value) - 10 * np.log10(mse)\n","\n","    return psnr\n","def calculate_ssim(hr_image, sr_image):\n","    c1 = 0.01 ** 2  # Constant for numerical stability\n","    c2 = 0.03 ** 2  # Constant for numerical stability\n","\n","    # Compute mean of input images\n","    mu_hr = torch.mean(hr_image)\n","    mu_sr = torch.mean(sr_image)\n","\n","    # Compute variance of input images\n","    var_hr = torch.var(hr_image)\n","    var_sr = torch.var(sr_image)\n","\n","    # Compute covariance\n","    cov = torch.mean((hr_image - mu_hr) * (sr_image - mu_sr))\n","\n","    # Compute SSIM\n","    numerator = (2 * mu_hr * mu_sr + c1) * (2 * cov + c2)\n","    denominator = (mu_hr ** 2 + mu_sr ** 2 + c1) * (var_hr + var_sr + c2)\n","    ssim = numerator / denominator\n","\n","    return ssim\n","train_gen_losses, train_disc_losses, train_counter = [], [], []\n","test_gen_losses, test_disc_losses = [], []\n","test_counter = [idx*len(train_dataloader.dataset) for idx in range(1, n_epochs+1)]\n","\n","for epoch in range(n_epochs):\n","    count = 0\n","    ### Training\n","    gen_loss, disc_loss = 0, 0\n","    tqdm_bar = tqdm(train_dataloader, desc=f'Training Epoch {epoch} ', total=int(len(train_dataloader)))\n","    for batch_idx, imgs in enumerate(tqdm_bar):\n","        generator.train(); discriminator.train()\n","        # Configure model input\n","        imgs_lr = Variable(imgs[\"lr\"].type(Tensor))\n","        imgs_hr = Variable(imgs[\"hr\"].type(Tensor))\n","        # Adversarial ground truths\n","        valid = Variable(Tensor(np.ones((imgs_lr.size(0), *discriminator.output_shape))), requires_grad=False)\n","        fake = Variable(Tensor(np.zeros((imgs_lr.size(0), *discriminator.output_shape))), requires_grad=False)\n","\n","        ### Train Generator\n","        optimizer_G.zero_grad()\n","        # Generate a high resolution image from low resolution input\n","        gen_hr = generator(imgs_lr)\n","        # Adversarial loss\n","        loss_GAN = criterion_GAN(discriminator(gen_hr), valid)\n","        # Content loss\n","        gen_features = feature_extractor(gen_hr)\n","        real_features = feature_extractor(imgs_hr)\n","        loss_content = criterion_content(gen_features, real_features.detach())\n","        # Total loss\n","        loss_G = loss_content + 1e-3 * loss_GAN\n","        loss_G.backward()\n","        optimizer_G.step()\n","\n","        ### Train Discriminator\n","        optimizer_D.zero_grad()\n","        # Loss of real and fake images\n","        loss_real = criterion_GAN(discriminator(imgs_hr), valid)\n","        loss_fake = criterion_GAN(discriminator(gen_hr.detach()), fake)\n","        # Total loss\n","        loss_D = (loss_real + loss_fake) / 2\n","        loss_D.backward()\n","        optimizer_D.step()\n","\n","        gen_loss += loss_G.item()\n","        train_gen_losses.append(loss_G.item())\n","        disc_loss += loss_D.item()\n","        train_disc_losses.append(loss_D.item())\n","        train_counter.append(batch_idx*batch_size + imgs_lr.size(0) + epoch*len(train_dataloader.dataset))\n","        tqdm_bar.set_postfix(gen_loss=gen_loss/(batch_idx+1), disc_loss=disc_loss/(batch_idx+1))\n","\n","    # Testing\n","    gen_loss, disc_loss = 0, 0\n","    tqdm_bar = tqdm(test_dataloader, desc=f'Testing Epoch {epoch} ', total=int(len(test_dataloader)))\n","    for batch_idx, imgs in enumerate(tqdm_bar):\n","        generator.eval(); discriminator.eval()\n","        # Configure model input\n","        imgs_lr = Variable(imgs[\"lr\"].type(Tensor))\n","        imgs_hr = Variable(imgs[\"hr\"].type(Tensor))\n","        # Adversarial ground truths\n","        valid = Variable(Tensor(np.ones((imgs_lr.size(0), *discriminator.output_shape))), requires_grad=False)\n","        fake = Variable(Tensor(np.zeros((imgs_lr.size(0), *discriminator.output_shape))), requires_grad=False)\n","\n","        ### Eval Generator\n","        # Generate a high resolution image from low resolution input\n","        gen_hr = generator(imgs_lr)\n","        # Adversarial loss\n","        loss_GAN = criterion_GAN(discriminator(gen_hr), valid)\n","        # Content loss\n","        gen_features = feature_extractor(gen_hr)\n","        real_features = feature_extractor(imgs_hr)\n","        loss_content = criterion_content(gen_features, real_features.detach())\n","        # Total loss\n","        loss_G = loss_content + 1e-3 * loss_GAN\n","\n","        if(count%9000 == 0):\n","            print(\"HR shape\",imgs_hr.shape)\n","            print(\"LR shape\",imgs_lr.shape)\n","            print(\"G shape\",gen_hr.shape)\n","            for k in range(imgs_hr.shape[0]):\n","                plot_train_result(imgs_hr[k,:,:,:], imgs_lr[k,:,:,:], gen_hr[k,:,:,:])\n","\n","        count = count+1\n","\n","        ### Eval Discriminator\n","        # Loss of real and fake images\n","        loss_real = criterion_GAN(discriminator(imgs_hr), valid)\n","        loss_fake = criterion_GAN(discriminator(gen_hr.detach()), fake)\n","        # Total loss\n","        loss_D = (loss_real + loss_fake) / 2\n","\n","        gen_loss += loss_G.item()\n","        disc_loss += loss_D.item()\n","        tqdm_bar.set_postfix(gen_loss=gen_loss/(batch_idx+1), disc_loss=disc_loss/(batch_idx+1))\n","\n","        # Save image grid with upsampled inputs and SRGAN outputs\n","        if random.uniform(0,1)<0.1:\n","            imgs_lr = nn.functional.interpolate(imgs_lr, scale_factor=4)\n","            imgs_hr = make_grid(imgs_hr, nrow=1, normalize=True)\n","            gen_hr = make_grid(gen_hr, nrow=1, normalize=True)\n","            imgs_lr = make_grid(imgs_lr, nrow=1, normalize=True)\n","            img_grid = torch.cat((imgs_hr, imgs_lr, gen_hr), -1)\n","            save_image(img_grid, f\"images/{batch_idx}.png\", normalize=False)\n","\n","    test_gen_losses.append(gen_loss/len(test_dataloader))\n","    test_disc_losses.append(disc_loss/len(test_dataloader))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["17196834915940989cdc6ef3fb9d9962","75f1d98ecc5e465bb8047bacb8497ba8","6c4c474fdbf242ecae4100fe0d0f5325","36ccd3382c9843a89625bbad6dc04892","34530be0bdb94b33a5d1ba22dcfc6994","cdf770248e854e44a859e4a3f95adbf7","da1c986b9a6b4a7198384333bd577efc","098cb0c868c34ba6b09684e704746c03","c81bf9b8cdf9498aab48a27a25fa22c5","229fd111812e49fd81901fdf2d6d4b3e","5c646ba1bc174c80af6ab1ad7236bec0","ccaf22945f3543be85f6331558f758e5","c9bb7fe77089424daea4f35a32f2668c","85939a4840db4f539cec4841098ed1fb","838b0cf09b564d4d979104ad4157e0a6","db5bf14e8eda46d1aaf86568ff77f6a9","659a40546d044fc79bb4441f11f06a97","94d2b40416e1444bb56344a102ccd2b8","b247daecae13413681e9b53ebe606822","1a167ccdbd3142ddb6ec7f07711344c6","7dd3466253604edbb67ff359ce1bb852","f5b5795ff10a4052ba54e01f95385fd9","0190a7907643420aa6ba53241c7940eb","8fa7590580c842fabd9bc24754ce17e4","3ce6906056904e0eaa329c890c0ea7ce","6e470211767040ba850d3c3d439238cd","cbcc3b3cb4e94bf6a735e09b09304c84","edc4511b908a4eb8a55ee5cea285a71d","d400903b567a413f955c49c6f7d876c9","ef16ca277ab24960ae7bbf428419afb1","cc3c7059bfe646e0a3298b736d4f07c6","a92dd3b2f7074eeb987f6ce285a29b15","e005105838964019a3bd0ccd6e69c8bd"],"output_embedded_package_id":"1GT7rQjO3wNTYpGe6jkkFAjRU29SttVPh"},"id":"RXYO0lGzWIIg","outputId":"6b816643-e22f-4a27-eec4-1b74cc9ccaa6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]}]}